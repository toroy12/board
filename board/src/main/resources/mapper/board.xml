<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board.mapper.BoardMapper">
	<resultMap type="Board" id="BoardResultMap">
		<id property="boardId" column="board_id"/>
		<result property="writerId" column="writer_id"/>
		<result property="writerName" column="name"/>
		<result property="title" column="title"/>
		<result property="contents" column="contents"/>
		<result property="createdDate" column="created_date"/>
		<result property="views" column="views"/>
		<result property="category" column="category"/>
		<result property="categoryName" column="category_name"/>
		<result property="countReply" column="countReply"/>
	</resultMap>
	
	<resultMap type="Reply" id="ReplyResultMap">
		<id property="replyId" column="reply_id"/>
		<result property="writerId" column="writer_id"/>
		<result property="writerName" column="name"/>
		<result property="contents" column="contents"/>
		<result property="createdDate" column="created_date"/>
	</resultMap>
	
	<resultMap type="Category" id="CategoryResultMap">
		<id property="categoryId" column="category_id"/>
		<result property="categoryName" column="category_name"/>
	</resultMap>
	
	<select id="boardList" resultMap="BoardResultMap">
		SELECT
			@rownum := @rownum + 1 AS num
			,b.board_id
			,u.name
			,b.title
			,b.contents
			,b.created_date
			,b.views
			,b.category
			,c.category_name
			,COUNT(r.reply_id) AS countReply
		FROM
			tb_board AS b
			JOIN	
			tb_category AS c
			ON 
			b.category = c.category_id
			JOIN 
			tb_user AS u
			ON 
			b.writer_id = u.email
			LEFT JOIN  
			tb_reply AS r
			ON 
			b.board_id = r.board_id
			, (SELECT @rownum := 0) AS TMP
		<where>
			<if test="category != null and category != ''">
				category = #{category}
			</if>
		</where>
		GROUP by
			b.board_id
		ORDER BY
			num DESC
		<if test="startIndex != null and startIndex > -1">
				LIMIT #{startIndex}, #{pageSize};
		</if>
	</select>
	
	<select id="boardListCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_board;
	</select>
	
	<select id="boardListByCategoryCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_board
		WHERE
			category = #{category};
	</select>
	
	<select id="boardListBySearch" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_board AS b
			JOIN
			tb_user AS u
			ON
			b.writer_id = u.email
		WHERE
		<if test="category != ''">
			category = #{category}
			AND
		</if>
			${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
	</select>
	
	<select id="search" resultMap="BoardResultMap">
		SELECT
			@rownum := @rownum + 1 AS num
			,b.board_id
			,u.name
			,b.title
			,b.contents
			,b.created_date
			,b.views
			,b.category
			,c.category_name
		FROM
			tb_board AS b
			JOIN	
			tb_category AS c
			ON 
			b.category = c.category_id
			JOIN 
			tb_user AS u
			ON 
			b.writer_id = u.email
			, (SELECT @rownum := 0) AS TMP
		<where>
			<if test="category != null and category != ''">
				category = #{category}
				AND
			</if>
			<if test="searchKey != null and searchKey != ''">		
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
		</where>
		ORDER BY
			num DESC
		<if test="startIndex != null and startIndex > -1">
				LIMIT #{startIndex}, #{pageSize};
		</if>
	</select>
	
	<select id="detailBoard" resultMap="BoardResultMap">
		SELECT
			b.board_id, u.name, b.title, b.contents, b.created_date, b.views, c.category_name
		FROM
			tb_board AS b
			JOIN 
			tb_user AS u
			ON 
			b.writer_id = u.email
			JOIN 
			tb_category AS c
			ON 
			b.category = c.category_id
		WHERE 
			board_id = #{boardId};
	</select>
	
	<select id="category" resultMap="CategoryResultMap">
		SELECT
			category_id, category_name
		FROM
			tb_category;
	</select>
	
	<insert id="write" parameterType="Board">
		INSERT INTO tb_board(writer_id, title, contents, created_date, category)
		values(#{writerId}, #{title}, #{contents}, NOW(), #{category});		
	</insert>
	
	<select id="modifyList" resultMap="BoardResultMap">
		SELECT
			title, contents, category
		FROM
			tb_board
		WHERE
			board_id = #{boardId};
	</select>
	
	<update id="modify" parameterType="Board">
		UPDATE 
			tb_board
			<trim prefix="SET" prefixOverrides=",">
			  	<if test="title != null and title != ''">
					title = #{title}
			  	</if>
			  	<if test="contents != null and contents != ''">
					,contents = #{contents}
			  	</if>
			  	<if test="category != null and category != ''">
					,category = #{category}
			  	</if>
  	  		</trim>
		WHERE
			board_id = #{boardId};
  	  </update>
	
	<delete id="delete" parameterType="int">
		DELETE 
		FROM 
			tb_board
		WHERE 
			board_id = #{boardId};
	</delete>
	
	<update id="boardViewCount" parameterType="int">
	    UPDATE tb_board
	    SET views = views + 1
	    WHERE board_id = ${boardId}
	</update>
	
	<select id="showReply" resultMap="ReplyResultMap">
		SELECT
			r.reply_id, u.name, r.contents, r.created_date
		FROM
			tb_reply AS r 
			JOIN 
			tb_user AS u
			ON 
			r.writer_id = u.email
		WHERE
			r.board_id = ${boardId}
	</select>
	
	<select id="countReply" resultType="int">
		SELECT
			COUNT(reply_id)
		FROM
			tb_reply 
		WHERE
			board_id = ${boardId};
	</select>
	
	<insert id="reply">
		INSERT INTO tb_reply(writer_id, contents, created_date, board_id, cDepth, cGroup)
		VALUES (#{email}, #{contents}, NOW(), ${boardId}, ${cDepth}, ${cGroup});
	</insert>
	
	<insert id="replyAjax">
		INSERT INTO tb_reply(writer_id, contents, created_date, board_id, class)
		VALUES (#{email}, #{contents}, NOW(), ${boardId}, 1);
	</insert>
</mapper>